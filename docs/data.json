{
    "project": {
        "name": "scope",
        "version": "0.0.0"
    },
    "files": {
        "src/__scope/evaluation/string/index.js": {
            "name": "src/__scope/evaluation/string/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__scope/evaluation/string/parse.js": {
            "name": "src/__scope/evaluation/string/parse.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__scope/evaluation/array.js": {
            "name": "src/__scope/evaluation/array.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__scope/evaluation/index.js": {
            "name": "src/__scope/evaluation/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__scope/evaluation/object.js": {
            "name": "src/__scope/evaluation/object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__scope/evaluation/regexp.js": {
            "name": "src/__scope/evaluation/regexp.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__scope/invocation.js": {
            "name": "src/__scope/invocation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__scope/iteration.js": {
            "name": "src/__scope/iteration.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/index.js": {
            "name": "src/index.js",
            "modules": {
                "scope": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "scope": {
            "name": "scope",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/index.js",
            "line": 5,
            "description": "AMD and CJS module."
        }
    },
    "classes": {},
    "classitems": [
        {
            "file": "src/__scope/evaluation/string/index.js",
            "line": 15,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "criterion",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "Describes the evaluator to be used",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Objects"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|Array|*"
            },
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/string/index.js",
            "line": 49,
            "description": "Evaluates an object criteria\n\nPERHAPS SHOULD MERGE WITH OBJECT EVALUATOR",
            "itemtype": "method",
            "name": "evaluateObject",
            "params": [
                {
                    "name": "scope",
                    "description": "",
                    "type": "[type]"
                },
                {
                    "name": "criteria",
                    "description": "",
                    "type": "[type]"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/string/parse.js",
            "line": 12,
            "description": "Parses out the result from a match result.\n\nCounts on a pattern of captures,\nthat are defined in the valueMatcherString",
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/string/parse.js",
            "line": 62,
            "description": "The string that will match out the type and effective value.",
            "itemtype": "property",
            "name": "valueMatcherString",
            "type": "RegExp",
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/string/parse.js",
            "line": 87,
            "description": "(\\w+) LITERAL\n\\$([^,]) EVALUATED\n\\[\\s*(.*?)\\s*\\] ARRAY\n\\{\\s*(.*?)\\s*\\} OBJECT",
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/string/parse.js",
            "line": 103,
            "itemtype": "property",
            "name": "objectValueMatcherString",
            "type": "{String}",
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/string/parse.js",
            "line": 121,
            "description": "Parses a string that represents an object",
            "itemtype": "method",
            "name": "parseObjectString",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/string/parse.js",
            "line": 167,
            "description": "Parses a string that represents an arrray.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/array.js",
            "line": 10,
            "description": "Picks the properties defined by the array\nand returns them in an object hash.",
            "itemtype": "method",
            "name": "evaluateArrayToObject",
            "params": [
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "criteria",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/array.js",
            "line": 53,
            "description": "Picks the properties defined in the criteria array\nand returns an array with the values in the required order.",
            "itemtype": "method",
            "name": "evaluateArrayToArray",
            "params": [
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "criteria",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/array.js",
            "line": 92,
            "description": "The interface.",
            "params": [
                {
                    "name": "scope",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "criteria",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "options",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/index.js",
            "line": 17,
            "description": "The public method. Just chooses the right method to run\nbased on arguments and options",
            "params": [
                {
                    "name": "criteria",
                    "description": "",
                    "type": "Array|Object|Regexp|String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "own",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "format",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/object.js",
            "line": 11,
            "description": "Picks the properties defined on the criteria object\nfrom the scope and sets defaults.",
            "itemtype": "method",
            "name": "evaluateObject",
            "params": [
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "criteria",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": ""
        },
        {
            "file": "src/__scope/evaluation/regexp.js",
            "line": 12,
            "description": "Loops through scope properties and picks\nthose that match the regular expression criteria.",
            "itemtype": "method",
            "name": "evaluateRegExp",
            "params": [
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "criteria",
                    "description": "",
                    "type": "RegExp"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": ""
        },
        {
            "file": "src/__scope/invocation.js",
            "line": 11,
            "description": "Invoke any function with the arguments and an optional context.",
            "itemtype": "method",
            "name": "invoke",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function|String"
                },
                {
                    "name": "scopeArgs",
                    "description": "",
                    "type": "Array|Object"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Whatever",
                    "optional": true
                }
            ],
            "class": ""
        },
        {
            "file": "src/__scope/invocation.js",
            "line": 39,
            "description": "Creates a function that will have the first arguments\nbound to the scope.",
            "itemtype": "method",
            "name": "partial",
            "params": [
                {
                    "name": "fn",
                    "description": "[description]",
                    "type": "Function"
                },
                {
                    "name": "scopeArgs",
                    "description": "[description]",
                    "type": "Array|Object|RegExp|String"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "Function"
            },
            "class": ""
        },
        {
            "file": "src/__scope/invocation.js",
            "line": 56,
            "description": "Define/get a scope-aware function",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "scopeArgs",
                    "description": "",
                    "type": "Array|Object"
                }
            ],
            "class": ""
        },
        {
            "file": "src/__scope/iteration.js",
            "line": 12,
            "description": "For in",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "Array|RegExp",
                    "optional": true
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Whatever",
                    "optional": true
                }
            ],
            "class": ""
        },
        {
            "file": "src/__scope/iteration.js",
            "line": 55,
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "Array|RegExp",
                    "optional": true
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Whatever",
                    "optional": true
                }
            ],
            "class": ""
        },
        {
            "file": "src/index.js",
            "line": 28,
            "description": "Assign initial data with descriptor.\nThat's all. :)",
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "data",
                    "description": "[description]",
                    "type": "Object"
                },
                {
                    "name": "descriptor",
                    "description": "[description]",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "scope"
        },
        {
            "file": "src/index.js",
            "line": 45,
            "description": "Creates a subscope that prototypically inherits from this object.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "[description]",
                    "type": "Object"
                },
                {
                    "name": "descriptor",
                    "description": "[description]",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "Object"
            },
            "class": "",
            "module": "scope"
        },
        {
            "file": "src/index.js",
            "line": 64,
            "description": "Assigns values to the scope object.",
            "itemtype": "method",
            "name": "assign",
            "params": [
                {
                    "name": "data|key",
                    "description": "",
                    "type": "Object|String",
                    "optional": true
                },
                {
                    "name": "descriptor|value",
                    "description": "",
                    "type": "Object|*",
                    "optional": true
                },
                {
                    "name": "descriptor",
                    "description": "",
                    "type": "Null|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "[this]",
                "type": "Object"
            },
            "class": "",
            "module": "scope"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nParses out the result from a match result.\n\nCounts on a pattern of captures,\nthat are defined in the valueMatcherString",
            "line": " src/__scope/evaluation/string/parse.js:12"
        },
        {
            "message": "Missing item type\n(\\w+) LITERAL\n\\$([^,]) EVALUATED\n\\[\\s*(.*?)\\s*\\] ARRAY\n\\{\\s*(.*?)\\s*\\} OBJECT",
            "line": " src/__scope/evaluation/string/parse.js:87"
        },
        {
            "message": "Missing item type\nParses a string that represents an arrray.",
            "line": " src/__scope/evaluation/string/parse.js:167"
        },
        {
            "message": "Missing item type\nThe interface.",
            "line": " src/__scope/evaluation/array.js:92"
        },
        {
            "message": "Missing item type\nThe public method. Just chooses the right method to run\nbased on arguments and options",
            "line": " src/__scope/evaluation/index.js:17"
        },
        {
            "message": "Missing item type\nDefine/get a scope-aware function",
            "line": " src/__scope/invocation.js:56"
        },
        {
            "message": "Missing item type\nFor in",
            "line": " src/__scope/iteration.js:12"
        },
        {
            "message": "Missing item type",
            "line": " src/__scope/iteration.js:55"
        }
    ]
}